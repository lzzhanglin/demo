<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper  namespace = "com.spring.demo.mapper.UserMapper">
    <select id="getPasswordByUsername" parameterType="string" resultType="string">
        select password from user where username = #{userName}
    </select>

    <insert id="register" parameterType="com.spring.demo.entity.User"
            useGeneratedKeys="true" keyProperty="id">
        insert into user (username, email,password,role)
        values (#{username,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR},
                #{role,jdbcType=VARCHAR})
    </insert>
    <select id="isExistUsername" parameterType="string" resultType="int">
        select count(username) from user where username = #{username}
    </select>

    <select id="isExistEmail" parameterType="string" resultType="int">
        select count(email) from user where email = #{email}
    </select>

    <update id="saveUserProfile" parameterType="com.spring.demo.entity.User">
        update user
        set nickname = #{nickname},
            birthday = #{birthday},
            phone = #{phone},
            home_addr = #{homeAddr},
            school = #{school},
            `describe` = #{describe}
        where username = #{username}
    </update>
    <select id="queryUserProfile" resultType="com.spring.demo.entity.User" parameterType="string">
        select username,
               nickname,
               phone,
               home_addr homeAddr,
               birthday,
               school,
               `describe`
        from user
        where username = #{username}
    </select>
    <select id="getUserIdByName" parameterType="string" resultType="long">
        select id
        from user
        where username = #{username}
    </select>
    <select id="queryPwdByUsername" parameterType="string" resultType="string">
        select password from user
        where username = #{username}
    </select>

    <update id="updatePwdByUsername" parameterType="map">
        update user
        set password = #{newPwd}
        where username = #{username}
    </update>

    <select id="searchUser" parameterType="map" resultType="com.spring.demo.entity.SearchUser">
        select id userId,
              article_num articleNum,
               username
        from user
        <where>

        <if test="keyWord != null and keyWord !=''" >
            and  username LIKE CONCAT(CONCAT('%', #{keyWord}), '%')
        </if>
        </where>

        limit #{offset},#{size}
    </select>

    <select id="searchUserTotal"  parameterType="string" resultType="int">
        select count(username)
        from user
        <where>

            <if test="keyWord != null and keyWord !=''" >
                and  username LIKE CONCAT(CONCAT('%', #{keyWord}), '%')
            </if>
        </where>


    </select>
    <select id="viewUser" parameterType="long" resultType="com.spring.demo.entity.SearchUser">
        select username,
               nickname,
               phone,
               birthday,
               home_addr homeAddr,
               school,
               `describe`
          from user
        where id = #{userId}
    </select>
    <select id="getUsernameById" parameterType="long" resultType="com.spring.demo.entity.User">
        select username,
        article_num articleNum
        from user
        where id = #{userId}
    </select>

    <update id="restoreArticleNum" parameterType="long">
        update user
        set article_num = article_num - 1
        where id = #{userId}
    </update>

    <select id="getUserIdByArticleId" parameterType="long" resultType="long">
        select user_id
        from article
        where id = #{articleId}
    </select>

    <update id="updateArticleNum" parameterType="long">
        update user
        set article_num = article_num + 1
        where id = #{userId}
    </update>
</mapper>